public class workers2 {
   
         //INNER CLASS
    public class cohort{
        //property
        public string name;
        public integer session;
        public integer studentNum;
    }
    
            //constructor method
         public cohort(string cohortName){
        name=cohortName;
    }
    
    //non static 
    public string isim;
    private integer calismaSaati=0;
    private decimal gelir=0;
    private decimal gider=0;
    
    //static
    
    public static integer toplamSaat =0;
    public static decimal toplamGelir=0;
    public static decimal toplamGider=0;
    
    
   // method
   
        
        public void ekleSaat(integer mesai){
            calismaSaati+=mesai;
               toplamSaat+=mesai; 
        }
         public integer saat(){
            return calismaSaati;
            
        }
    public void ekleGelir(decimal cash){
        gelir+=cash;
        toplamGelir+=cash;
    }
    public decimal para(){
        return gelir;
    }
    
    public void borc(decimal borcs){
        gider+=borcs;
        toplamGider+=borcs;
    }
    public decimal borclar(){
        return gider;
    }    
    
    
    
    }
    
    
    



//Call Functions.

//datatype variableName = Exp.

workers2 david=new workers2();
workers2 cristiano=new workers2();

//assign

david.isim='david hardy';
cristiano.isim='cristiano ronaldo';
david.ekleSaat(45);
cristiano.ekleSaat(23);
david.ekleGelir(50000000);
cristiano.ekleGelir(65232254);
david.borc(5698521.5);
cristiano.borc(365125.5);

//print
system.debug(david.isim);
system.debug(cristiano.isim);
system.debug('david calisma saati: '+ david.saat());
system.debug('toplam saat: '+ workers2.toplamSaat);
system.debug('david gelir: '+david.para());
system.debug('cristiano gelir: '+cristiano.para());
system.debug('toplam gelir: '+ workers2.toplamGelir);
system.debug('david borc: '+david.borclar());
system.debug('cristiano borc: '+cristiano.borclar());
system.debug('toplam borc: '+workers2.toplamGider);

workers2.cohort workerCohort= new workers2.cohort();
workerCohort.name='Salesforce Apex'; 
system.debug(workerCohort.name);

//Listeleme
List<workers2> multiworkers =new list<workers2>();
multiworkers.add(david);
multiworkers.add(cristiano);
system.debug(multiworkers);




